/*Another useful thing to know is that anything after a forward slash and star
   is ignored until INDELible sees a star followed by a forward slash later on.
*/     

[TYPE] NUCLEOTIDE 1 //  EVERY control file must begin with a [TYPE] command.
            //  The number after "NUCLEOTIDE" can be 1 or 2 and chooses the 
            //  algorithm that INDELible uses (see manuscript). Both give 
            //  identical results but in some cases one is quicker.
            //  Other blocks and commands following this statement
            //  can come in any order you like.

[MODEL]    modelname        //  Evolutionary models are defined in [MODEL] blocks.
[submodel]     JC         //  Here the substitution model is simply set as JC69.
  
[TREE] treename  ((365losTXb1,((((((((479devTXb1,364losTXa1),478devTXb1),278devTXa1),(180losTXb1,478devTXa1)),277pedTXb1),((081devTXa1,((181guaTXb1,364losTXb1),((((081devTXb1,180losTXa1),479devTXa1),((((181guaTXa1,477devTXa1),(278devTXb1,360palTXa1)),276pedTXa1),477devTXb1)),376sabTXa1))),(366losTXa1,458menTXb1))),277pedTXa1),(((((075oscFLa3,((103cofFLb3,((450dedFLa3,328lanKYa3),(305desMSa3,103cofFLa3))),171jonGAa3)),337ozkARa2),(((((266warSCb3,266warSCa3),(179palTXb1,(179palTXa1,284steTXb1))),((392cavFLa3,(((392cavFLb3,171jonGAb3),(182colTXb1,(285steTXb1,376sabTXb1))),355ftpTXb2)),360palTXb1)),075oscFLb3),(130chwALa3,130chwALb3))),((((137lurALb3,(095maryLb2,095maryLa2)),068choMSa2),((102helnLb2,(((481escALa3,(((((068choMSb2,384yogLAa2),(((311oakALa3,((064smiTXa2,(((((((137lurALa3,((((361palTXb1,361palTXa1),((((388indLAb2,169helnLb2),338delMSb2),(338delMSa2,247holMSa2)),((((380granLa2,287crkMSa2),286crkMSa2),347grnOKb2),115hoopLb2))),168helnLa2),(187leeLAb2,(444escALb3,((366losTXb1,450dedFLb3),(((064smiTXb2,(174benMOb2,(274ochARb2,146trlMOb2))),353bonTXb2),337ozkARb2)))))),380granLb2),388indLAa2),339delMSb2),187leeLAa2),384yogLAb2),169helnLa2)),(235guaTXa1,((276pedTXb1,((365losTXa1,353bonTXa2),((267wacNCb3,267wacNCa3),(312oakALa3,(((444escALa3,142rocTNa3),443escALa3),326penKYa3))))),((311oakALb3,(312oakALb3,(391escALb3,247holMSb2))),(328lanKYb3,((443escALb3,(((((391escALa3,326penKYb3),(481escALb3,305desMSb3)),142rocTNb3),330rauILb3),(330rauILa3,143penKYa3))),(211natTNb2,143penKYb3)))))))),287crkMSb2),168helnLb2)),355ftpTXa2),(061gemmin0,195ticLAb2)),308lurALa3)),((404amitLa2,(339delMSa2,(((((115hoopLa2,308lurALb3),(102helnLa2,195ticLAa2)),182colTXa1),286crkMSb2),404amitLb2))),(274ochARa2,146trlMOa2))),211natTNa2)),285steTXa1)),(167helnLb2,(347grnOKa2,(167helnLa2,284steTXa1))))),174benMOa2))),235guaTXb1,458menTXa1);        //  User trees are defined here

[PARTITIONS] partitionname             //  [PARTITIONS] blocks say which models go with
[treename modelname 1000]            //  which trees and define the length of the
                                       //  sequence generated at the root (1000 here).

[EVOLVE] partitionname 1 Scincella_SELT.phylip.raxml  //  This will generate 100 replicate datasets 
                                       //  from the [PARTITIONS] block named above.

// The true alignment will be output in a file named Scincella_SELT.phylip.raxml_TRUE.phy
// The unaligned sequences will be output in a file named Scincella_SELT.phylip.raxml.fas
// To learn how to implement more complicated simulations (or different 
// models) please consult the manual or the other example control files.


